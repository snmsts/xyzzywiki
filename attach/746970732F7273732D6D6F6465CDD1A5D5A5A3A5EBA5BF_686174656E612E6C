;;; -*- Mode: Lisp; Package: EDITOR -*-
;;;
; Last updated: <2003-10-06T08:57:36+09:00>
;
; rss/filters/hatena.l
;
;; ■ はてなアンテナを rss 化するフィルタ
;; 
;;    ・設定
;;      - *hatena-antenna-items-max* に最大表示件数を指定
;;    ・登録
;;       1. "a" => "http://a.hatena.ne.jp/i9N/simple"
;;          (シンプルの方がファイルサイズが小さくていいと思う)
;;       2. タイトルを入力する。

(require "rss/main")

(provide "rss/filters/hatena")

(in-package "rss")

(defvar *ha-url-base* "http://a.hatena.ne.jp/")
(defvar *ha-url-regexp* (concat *ha-url-base* "\\(.*\\)"))
(defvar *ha-items-max* 30)

(defun hatena-antenna-parse-buffer ()
  (let (items
        time
        url
        title)
    (save-excursion
      (goto-char (point-min))
      (while (scan-buffer "<li>\\([0-9:/ ]+\\)<a href=\"http://a.hatena.ne.jp/go\\?\\(http://.*\\)[0-9]\\{14\\}\"[^>]*>\\([^<]+\\)</a>"
                          :regexp t
                          :tail t)
        (setq time (match-string 1))
        (setq url (match-string 2))
        (setq title (ed::xmlpm-decode-special-chars (match-string 3)))
        (push (rss-create-item (concat time title) url)
              items))
      (setq items (nreverse items))
      ; 間引き
      (when (and *ha-items-max*
                 (< *ha-items-max* (list-length items)))
        (setq items (butlast items (- (list-length items) *ha-items-max*))))
      )
    items))

;; フィルタ関数
;; (チャネル, ファイルを引数にfuncallされる)
(defun hatena-antenna-filter (channel file)
  (let ((url (rss-link channel))
        (title (or (and (rss-title channel)
                        (not (equal (rss-title channel) *rss-menu-temp-buffer-suffix*))
                        (rss-title channel))
                   (read-string "Site Title: ")))
        items)
    (save-excursion
      (set-buffer (get-buffer-create *rss-buffer-temp*))
      (erase-buffer (selected-buffer))
      (insert-file-contents file)
      (setq items (hatena-antenna-parse-buffer))
      (delete-buffer (selected-buffer)))
    ; 元のファイルを上書き
    (convert-to-rss (rss-create title url nil items)
                    file)))

;; フィルタの登録
;; (URLがマッチした時にフィルタが呼ばれる）
(rss-filter-regist *ha-url-regexp* 'hatena-antenna-filter)
