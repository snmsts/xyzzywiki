#freeze
#contents

*ミニバッファってなあに？ [#e6c71ac2]

**前口上 [#vefa6cb9]

おそらく普通のエディタ的な部分としての説明は、もうだいたいできたのではないかと思います。((まだ、検索とかの正規表現などは説明していないけど))

今回紹介するのは、普通のウィンドウズのエディタにはないミニバッファですね。自分もEmacs系をあんまり触ったこと無いので説明になっているのかどうか疑問ですが、それなりに説明しようと思います。

ちなみに、キーバインドの話をまたちょっとだけやらせてください。適当なファイルを開いて、C-aとか、C-eとかを押してみてください。カーソルの位置が変化します。さらに、C-nとかC-pとかを押すと、一行前に戻ったり、一行後ろに進んだりします。他にもいろいろありますけど、こういうカーソル位置を移動するショートカットを覚えておくと、矢印で移動させるよりも（普段ある手の位置からあんまり移動させなくてすむので）楽ですよ。

これ以降毎回広範囲で使えそうなキーバインドを紹介していこうと思っています。

**さて本題 [#ae78f17a]

今回ミニバッファってのは、普通のウィンドウズのプログラムにはちょっとないと思います（よね？）実際に見たほうが話が早いと思うのでとりあえず、何なのか説明します。

簡単に言うと、ステータスバーと、モード行の間の一行くらいのスペースが開いたところです。

#br
#br

CENTER:''ミニバッファはここのこと''
CENTER:#ref(01.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){緑色の部分を''ミニバッファ''と呼びます。(ちなみにその上はモード行)キーバインドのところで紹介したC-x C-fを押すとこの部分に入力できたはず。};
#br
#br

このミニバッファと言うのは、はじめ見たときには何でこんなところに一行空いているんだろう、とかって思ったりすると思います((自分はそう思った……))けど、それにはちゃんと訳があるんです。実はこのミニバッファに何か文字を入れたりすると、xyzzyに様々な「命令」を与えることができるようになります。

***実際にやってみる [#c9b5aa8c]

やってみると、すぐにわかると思います。ちょっとやってみましょうか。まずはミニバッファに入力できるようにしないとだめですよね。普段はファイルに行カーソルがあります。それをミニバッファのところに移動させるにはM-xやEsc-xを押してください。するとファイルにあったカーソルがさっき紹介したミニバッファの所に移動します。

#br
#br

CENTER:''ミニバッファへ入力''
CENTER:#ref(02.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){カーソルがミニバッファに移動したAlt-x(Esc-x)を押すと、カーソルが移動する。また、ミニバッファの一番左には、「M-x: 」という文字が表示される。};

#br
#br

その状態のまま、文字の入力方法が「ひらがな」等の場合には「半角英数」や「直接入力」に変更して、kilと入力してみてください。
そしてその後、さらに続けてTabキー（あるいはC-iでもOK）を入力してみてください。すると、kilの部分がkill-と言う文字に(勝手に)変化します。さらにもう一度TabキーやC-iを入力すると、なんかウィンドウが二つに分かれますよね。

#br
#br

CENTER:''Tab(あるいはC-i)を一回入力した時''
CENTER:#ref(03.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){やってもらえばわかる通り、''kil''が''kill-''と変わります。};

#br
#br

#br
#br

CENTER:''Tab(あるいはC-i)をさらにもう一回入力した時''
CENTER:#ref(04.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){ウィンドウが二つに分かれる。ここで注意してほしいのは下のウィンドウには最初の文字がkill-で始まるものばかりって所。前の一回押した時とは違い、候補がたくさんあるので、xyzzyが「どれがいいですか〜」と候補を表示してくれます。};

#br
#br

なんか、いきなりウィンドウが二つに分かれてちょっとビックリしますよね。さらに続けてxyと入力してTab（やC-i）を数回押してみてください。すると、xyの所も補完されて、xyzzyって文字に変化していると思います。

#br
#br

CENTER:''xyと入力してTab（C-i）を何度か入力してみた時''
CENTER:#ref(05.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){xyzzyの所も補完された。ステータスバーの左の所には(よくみると)「Solo match」と表示されている。(その意味は「一つに決まったよ〜」くらいかなぁ？)};

#br
#br

勘のいい人ならわかるとおり、「kill-xyzzy」とは「xyzzyを殺す」（ちょっと怖いが）、すなわち、「xyzzyを終了する」と言う意味の命令です。
上の状態でReturnキーを押すと、xyzzyが終了します。((ファイルがセーブしていない場合にはダイアログが出ますけどね。))

一つの例で申し訳ないですが、こんな感じです。こんな感じにミニバッファには命令をいろいろ入力できます。
試しに、他にも何か入れてみてください。適当に補完されるので、よくわからん時には、最初に「a」とだけ入力した後に、Tabを押したりすると、いろいろ下のウィンドウに表示されます。
また試す時には、超重要なファイルなどで試さずに、適当なファイルの方が良いかと思います。

他に例を挙げますと、例えば、ミニバッファに（先ほどと同じように）end-of-bufferとか入れてみると、ファイルの最後（EOFのところ）にカーソルが移動します。（逆にbeginning-of-bufferと入力するとファイルの最初に戻ります）説明の時と同様に、途中でTab(C-i)を入れると、同じところまでは自動的に補完されます。

***途中でやめたくなったら [#qcf42e14]

話は変わりますが、ミニバッファに何か入力しようとして、途中でやめたくなったらどうすればいいのでしょうか？（つまりは、ミニバッファから命令を送るのをやめたくなって、何もせずに元のファイルへ何もしないで戻りたい時ね）

マウスカーソルでファイルの部分をクリックとかしても、ミニバッファへの入力から抜け出すことが出来ますけど、それだとウィンドウが二つになったりしたままでちょっと不便ですよね。((そんな時にはC-x 1 とか押せば直りますが。))

そんな時にキーバインドを覚えようでちょこっと紹介したC-gが使えます。実際やってみればわかると思いますが、C-gを押せば、ミニバッファへの入力状態から抜け出せて、元のファイルを編集するウィンドウに戻れます。

***第二弾:C-sとか（引数指定） [#jc7b2899]

ミニバッファは、上のように命令を単独を入れたら、すぐ実行されるものもありますが、さらに幾つかの命令を受け付けるものもあります。第二弾はそういった例を取り上げます。それはC-sです。同様にやって見ます。

何か適当なファイルを開いてみてください。それから（おもむろに）C-sを押してみてください。(前回の続きではないので、ファイルの所にカーソルがある状態で入力してください)

すると、前回のようにミニバッファに入力できるようになります。だけど良く見てもらえばわかるとおり、前回の時にはミニバッファの頭の部分にはM-x:という文字が表示されていましたけど、今度はM-x:の代わりにSearch forward:と言う文字に変わっていますよね？ わかってきたと思いますが、ミニバッファの文字は入れる文字のヒント（みたいなもの）が入っているんです。
Search forward:と言うのは日本語に直せば、「前方を検索」あたりになるでしょうか？ 実際にSerch forward:の後ろに探したい文字列（今度は英語でも日本語でもOK）を入力してみてください。

#br
#br

CENTER:''C-sを入力して検索したい文字列を入力する''
CENTER:#ref(06.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){検索したい文字列を入れてね。日本語でもOKです。};

#br
#br

ミニバッファに入力した文字列が見つかった場合には、そこに移動しますし、見つからない場合にはステータスバーに「文字列が見つかりません」と出ると思います。
今回の場合には途中でTab（C-i）を入力しても文字列は自動的に補完されるようなことはありませんよね。(単純にミニバッファ内にタブが入ります)
この例のように、ミニバッファに入れるのは、 単純な命令だけではなくて、引数((と言うのか？ 一つで命令が完結しないで、そのオプションみたいなもの))を入れる場合もあります。 実は、このC-sってのは前回のAlt-xを打った後にsearch-forwardと入力した時のものとまったくおんなじです。
実は、C-sでsearch-forwardを呼び出すようにxyzzy側で設定してあるんです。従って、C-sで他の命令を呼び出すように変更することも可能です。

ちなみに、メニューバーのヘルプ（？） → キー割り当て一覧（K）の右の部分(bindingって所の文字列)を見ると、どのキーバインドがどの命令なのかがわかります。

例えば、ファイルを開いたり新規に作成するC-x C-fはfind-fileと書いてあります。実際にAlt-xの後find-fileと入力すると、キーバインドを覚えようのところで説明したように、ミニバッファの先頭の文字列はFind file:と表示され、パスを入力すれば、ファイルが開かれますね。

***第三弾:直接入力する（関数を直接打つ） [#z9c4235f]

まだまだ、ミニバッファの使い方はあります。前にも少し書いたかもしれませんが、xyzzyはLispというプログラミング言語を解釈するインタプリタです。したがって、そのLispの式を入力して評価することも出来ます。 ((というか、今まで入力してきた「命令」がLispの「関数」です。find-fileとかsearch forwardというものがです。すごい！！))

まぁ、普通は（おそらくほとんどは）Lispを書く時にはミニバッファよりも普通のバッファを使うと思うのですが、Lispの式をミニバッファの中に書くこともできるみたいです。(良く知らないけど)

実際に入力することは（Lispを書く人以外）ほとんど使わないような気もしますけど、一応紹介しておきます。それにはEsc Escを押します。これはAltを二回押してもダメです。(C-[がEscの代わりなので、C-[ C-[でもOK)押してみると、今までと同じようにミニバッファにカーソルが移動します。ミニバッファの先頭にはEval:と出ると思います。そこにLispの式を入れればその式が評価されて返ってきます。

試しに、置き場所を決めようの所でもやりましたけど、

 (insert "ミニバッファから読み込んだよー\n")

と入力してみてください。すると、現在編集中のファイルに、

 ミニバッファから読み込んだよー
  

と入力されると思います。ま、こんな風に、Lispの式を評価することもできます。((深入りはしません。というかできない……。))

**まとめると…… [#z2effbab]

大体こんな感じかなぁ。

- ミニバッファってのはステータスバーの上の（一行くらい）空いた部分のこと。
- ミニバッファに命令（Lispの式）を入力するとxyzzyをいろいろ操作できる。種類としては、
-- C-s（など）……キーバインドから指定するもの。
-- Alt-x…………キーバインドに登録されていないもの（登録されているものも可）
-- Esc Esc………Lispの式そのもの。
- 引数を指定するものもあるし、しないものもある（この辺りはLispがわからんとちょっと苦しいんだろうな）
- ミニバッファから現在編集しているファイルに戻したい時にはC-gを押す。
- ミニバッファ内でC-n（や↓キー）、C-p（や↑キー）を押すと、今まで入力した履歴が表示される 。

ってところでしょうか？一番最後のはぜんぜん言っていませんでしたけど、やってみるとわかると思います。あんまり要領良くまとまっていないような気もするのですが、取り合えずミニバッファはxyzzyに命令を与える所と考えれば、大きくは間違っていないと思います。((そして、その命令はLispという言語で書かれているらしいまで含めれば、完璧？))

**どの辺で便利なの？ [#i89fe671]

実際どういった場面で便利でしょうか？自分の場合、たくさんのファイルを編集して、全てを一気に保存したい時などには、Alt-x の後に、 save-all-buffersと入力したりします。即効で閉じたい場合には、kill-all-buffersでファイルを全部閉じられます。後はC-sとか、かな。((後は、拡張Lispのバイトコンパイルとかかなぁ))

xyzzyでCやJava等、プログラミングのコードを書く人は、M-xの後、 shellと入力すると、コマンドプロンプトがxyzzyの中で出てきてくれるので、便利かもしれません。

慣れてくるとメニューバー等で選択するよりも圧倒的に早いので、慣れておくと良いんじゃないでしょうか？

***ミニバッファに入力できる命令を調べる [#ud563ee1]

そう言われても、実際にどんな命令があるのかよく分からないことが多いと思います。そんな時には、''M-x apropos''と入力してください。すると、ミニバッファが、

 Apropos(Regexp):

と入力待ちとなるので、そこで適当に入力してみてください。例えば、bufferとか入力すると、bufferと言う文字が入った命令が一覧表示されます。その中からそれっぽいのを探すのが一つの方法です。

他には（やはりと言うか）Emacsに関係したWebページや本を見てみると、いろいろわかると思います。

**ところで「ミニバッファ」って語の意味は？ [#tce08c87]

ミニってのはmini、つまり、「小さい」ってことで問題ないですよね。バッファってのは、現在編集中のファイルのことです。((もう少し正確に言うと、メモリ上に展開したファイルのデータか？))自分の場合、なぜミニバッファと呼ぶのかはぜんぜん気にしないで使ってます……。

**一応終了 [#x588a6da]

ミニバッファのことは大体わかったと思います。例えば、「M-xの後、save-bufferして下さい」とかって言われた時には、Alt-xを押してミニバッファにM-x:と表示されることを確認して、save-bufferという文字列を入力します。 （同様に、M-x apropos と言う記述だとしたら、Alt-xの後に、aproposと入力することを意味します。）

まぁ、メニューバーやダイアログを使う分にはめったに使うことは無いかもしれませんが、後で拡張Lispファイル等を導入してみたいなぁ、と思っている人は覚えておいて損はないです。((きっと。))ちなみに、ミニバッファは消せないと思います。消せたらxyzzyじゃ無くなるような……。
#norelated
