[[tips]]
* calc-modeで漢数字、３桁区切り数字を使おう！(＋漢数字パッケージ) [#n252360a]

** メニュー [#kdb7328b]
#contents

** これは何？ [#wccb075b]
テキスト中の任意の漢数字、全角数字、カンマ区切り数字などを算用数字にする関数を提供します。
これをcalc-modeに適用すれば、
 $ 1無量大数/200不可思議
で Returnキーを押下すると、
 $ 100000000000000000000000000000000000000000000000000000000000000000000/2000000000000000000000000000000000000000000000000000000000000000000
 50

となります。(算用数字に変換されたのち、RETが押下されたのと同じ動きをします。)

** ダウンロード [#t1743314]
[calc-onthespot:https://gist.github.com/okayu3/9886089]

** インストール [#y24c4f82]
+ calc-onthespot.l を site-lisp に置いてください。
+ .xyzzy / sitelinit.l に、次の設定を行います。
 (add-hook 'ed::*calc-mode-hook*
           #'(lambda ()
               ;(require "calc-ext")  ;← calc-extを使う場合はここを アンコメント
               (require "calc-onthespot")
               (define-key ed::*calc-mode-map* #\RET
                           'calc-onthespot-eval-line)))
計算履歴をたどれる、便利な calc-ext.l をすでにお使いの場合は、~
上記設定のように、calc-ext.l をrequire した''後''に calc-onthespot-eval-lineへのキーバインドを、呼ぶようにします。(上記コメント参考のこと)

** 使い方 [#k737333c]
+インストールしたら早速 M-x calc。もう普通に全角半角・漢数字混在させて計算できるようになります。
 $ 二億三千万/２０万
→
 $ 230000000/200000
 1150
+全角数字も使えます。
 $ ６万８０００＊１．２
→
 $ 68000*1.2
 81600.0
+大字を使った数字も使えます。
 $ trunc(弐拾萬/六百万＊千百十一*3) 
→
 $ trunc(200000/6000000*1111*3)
 111
+関数ももちろん使えます。
 $ gcd(五千二百八十七, 三億千三百二十一万三千四百五十七)
→
 $ gcd(5287, 313213457)
 17
+calc-modeといったらこれでしょう。
 $ 生命、宇宙、そして万物についての究極の疑問の答え ＊ １不可思議
→
 $ 生命、宇宙、そして万物についての究極の疑問の答え * 10000000000000000000000000000000000000000000000000000000000000000
 420000000000000000000000000000000000000000000000000000000000000000

** 設定 [#l9073eae]
''カンマ区切り数字'' を使う場合、次の設定を .xyzzy/siteinit.lに入れます。
 (setq *calc-eval-line-with-thousands-separator* t)
すると
 $ 10,233 + 424,321
が
 $ 10233 + 424321
 434554
となります。~
''注意！！'' ただし、２つ以上の引数をとる計算関数を使う場合に混乱が生じますのでご注意ください。~
たとえば最大公約数を求めるとき、
 $ gcd(100,120)
は本来、"20" を返すべきですが、この(カンマ区切り数字を解釈する)設定をすると "100120"が返ります。~
カンマの左右どちらかに空白を追加してやると正しく動作します。
 $ gcd(100, 120)
 20

** 漢数字の扱える範囲 [#w1ffb3d8]
-『一二三四五六七八九〇』の各数字
- 桁に扱える数詞
|''数詞''|''数''|''備考''|
|十 | 10||
|百 | 100||
|千 | 1000||
|万 | 10 ^ 4||
|億 | 10 ^ 8||
|兆 | 10 ^ 12||
|京 | 10 ^ 16||
|垓 | 10 ^ 20||
|杼 | 10 ^ 24|正しくは『のぎ偏』|
|穣 | 10 ^ 28||
|溝 | 10 ^ 32||
|澗 | 10 ^ 36||
|正 | 10 ^ 40||
|載 | 10 ^ 44||
|極 | 10 ^ 48||
|恒河沙 | 10 ^ 52||
|阿僧祇 | 10 ^ 56||
|那由他 | 10 ^ 60||
|不可思議 | 10 ^ 64||
|無量大数 | 10 ^ 68||
- また大字として以下の文字が使えます。
|''大字''|''数''|''備考''|
|壱|1||
|弐|2||
|参|3||
|伍|5||
|拾|10|「十」と同じと見なす|
|廿|20|桁を表す数詞ではない|
|萬|10 ^ 4|「万」と同じと見なす|

** ライブラリとしての使い方 [#p2b5a09d]
+ ''calc-onthespot-kansuji'' 関数 ~
漢数字文字列を 数(number)に変換する関数です。返り値はnumberです。
 (calc-onthespot-kansuji  "千百八十三万百廿一")
 ;;→ 11830121
用途は無限。数字をユーザ入力させたいところなどで使えますよ。
+ ''calc-onthespot-kansuji-exchange'' 関数 ~
引数の文字列のなかに含まれる任意の漢数字文字列を全て算用数字に置き換えて返します。返り値は文字列です。
 (calc-onthespot-kansuji-exchange "国会法第壱百弐拾壱条の二第一項の規定")
 ;;→ "国会法第121条の2第1項の規定"
 (calc-onthespot-kansuji-exchange "四月二十一日")
 ;;→ "4月21日"
こちらも使いようによっては便利です。バッファごとまとめて変換したり。ただし、「千里眼」が「1000里眼」になっちゃうけどね。
+ ''calc-onthespot-kansuji-exchange-selection'' 関数 ~
selection中に含まれる任意の漢数字文字列を全て算用数字に置き換えます。~
例えば、次のようにすれば「編集→変換」メニューに「漢数字→算用数字」を付け加えることができます。
 (add-hook '*init-app-menus-hook*
           #'(lambda()
               (require "calc-onthespot")
               (add-menu-item (get-menu (get-menu *app-menu* 'ed::edit) :convert-popup) nil
                              "漢数字 -> 算用数字"
                              'calc-onthespot-kansuji-exchange-selection :any-selection)))
余談：わたしは右クリックメニューに入れてますが、そこそこ使います。
               (add-menu-item *app-popup-menu* nil
                              "漢数字 -> 算用数字"
                              'calc-onthespot-kansuji-exchange-selection :any-selection)
こんな感じで。
+ ''calc-onthespot-tokansuji'' 関数 ~
これは逆方向。任意の数字文字列を 漢数字に変換する関数です。返り値は文字列です。第２引数にいろんなパターンの漢数字表現を指定します。
  (calc-onthespot-tokansuji "310013154935202302" 4)
  ;;→ "三十一京十三兆千五百四十九億三千五百二十万二千三百二"     ;;オーソドックスな漢数字
  (calc-onthespot-tokansuji "310013154935202302" 2)
  ;;→ "３１京１３兆１５４９億３５２０万２３０２"                 ;;万以上の位数詞のみ漢数字を使うパターン
  (calc-onthespot-tokansuji "310013154935202302" 5)
  ;;→ "参拾壱京壱拾参兆壱千伍百四拾九億参千伍百弐拾万弐千参百弐" ;;大字を使った漢数字
引数は算用数字じゃなくてもOK。漢数字を含む数字→漢数字でもいいのです。
  (calc-onthespot-tokansuji "４億３００万１１" 4)
  ;;→"四億三百万十一"
「百万」単位も扱えます。
  (calc-onthespot-tokansuji "１２２１百万" 2)
  ;;→"１２億２１００万"

** 完全ではありません。 [#v0b31f26]
- チェックが甘いのでご注意ください。例えば「２廿」「０．８万３０００」というのは本来NGな表記ですが、このパッケージは通してしまいます。例えば次のような解釈をします。
 「２廿」            →「220」         #廿を「二十」と一旦変換するため
 「０．８万３０００」→「11000.0」     #0.8万＋3000 の計算を行う。
 「一万１万三億」    →「300020000」   #1万+1万+3億 の計算を行う。
 「八百千」          →「1800」        #800+1000 を行う。「８００千」は 「80000」となる。
- 「万」以上の大きさを表す数詞については数値を省略できません。この場合、無視するのでご注意ください。
 「１万万」          →「10000」       #２つめの「万」に数値がないので無視
 「万千百十」        →「1110」        #１つめの「万」に数値がないので無視。千、百、十は「1」を補完します。
- 10の24乗の「じょ」の字として「杼」を使っています。正しくは この文字の偏(へん)を のぎへんにしたものです。文字コードによっては表現できないものなのでこの字で代用しています。
 「三千八十四杼」    →「3084000000000000000000000000」
- 漢数字にカンマ区切りを入れないでください。目も当てられないことになります。
- 文字列をこねくり回すのでそれなりに遅いです。

** 謝辞 [#sfb30385]
(亀井さんありがとう亀井さん)^42

** 変更履歴 [#ede36eb9]
-[2014/04/25] 漢数字出力関数を追加。このページをxyzzy wikiに登録。
-[2014/04/10] このドキュメント書きました。カンマ区切り数字をcalc-modeで使えるようにしました。
-[2014/04/09] calc-ext.l とケンカしないようにしました。

** 参考 [#x24014d8]
これは元々 [[カーソル位置で計算>tips/カーソル位置の計算式を計算結果と置換する]] するためのライブラリです。~
簡単な設定でこの機能も使えるようになるので是非どうぞ。~
また、 [[calc-modeで履歴を使う機能>tips/calc-modeのヒストリー]]と一緒に使うとよりハッピーかと思います。オススメです。

** ライセンスなど [#y4830954]
ご自身の責任にてお使い下さい。MIT ライセンスです。

----
total: &counter;
#comment
