[[tips]]
* カーソル位置で計算して結果を挿入します [#cf57d24a]

** メニュー [#rb885a04]
#contents

** これは何？ [#u1c21af1]

計算式を書いたら 計算結果と置換してくれるライブラリ、calc-onthespot.l です。

 『地球から月を見るとき、光速のことを考えればいつも 372,011,000/299,792,458 秒も昔の姿を眺めていることになるのだ。』

と書いてから、"299,792,458" の後ろのところで この calc-onthespot を呼び出すと、

 『地球から月を見るとき、光速のことを考えればいつも 1.240895126187597 秒も昔の姿を眺めていることになるのだ。』

と置き換わります。~
また、''全角数字、漢数字にも対応''して、「２００万＊1.08+三百八十七」などの表記の混在した数式も''その場で計算''できます。~
リージョン指定無しで操作できる版と、リージョン指定版の両方を定義しています。


** ダウンロード [#f5e001a4]
[calc-onthespot:https://gist.github.com/okayu3/9886089]

** インストール [#n73f5985]
+ calc-onthespot.l を site-lisp に置いてください。
+ .xyzzy / sitelinit.l に ''calc-onthespot'' 関数を任意のキーにバインドします。~
すなわち、たとえば
  (global-set-key '(#\C-c #\=) #'(lambda() (interactive)
                                 (require "calc-onthespot")
                                 (calc-onthespot)))
もしくは任意のモードの キーモードマップに
 (define-key *foobarbar-mode-map* '(#\C-c #\=) #'(lambda() (interactive)
                                 (require "calc-onthespot")
                                 (calc-onthespot)))
などと入れます。
+ リージョンの数式を計算する ''calc-onthespot-region'' もあります。~
同様に、.xyzzy / sitelinit.l に ''calc-onthespot-region'' 関数を任意のキーにバインドします。
すなわち、たとえば

  (global-set-key '(#\C-c #\-) #'(lambda() (interactive)
                                 (require "calc-onthespot")
                                 (calc-onthespot-region)))
もしくは任意のモードの キーモードマップに

  (define-key *foobarbar-mode-map* '(#\C-c #\-) #'(lambda() (interactive)
                                 (require "calc-onthespot")
                                 (calc-onthespot-region)))
などと入れます。

** 使い方 (calc-onthespot: リージョン指定なしで実行) [#ndcd7ef1]
+[半角スペーススタート]任意の場所で、半角スペースを１つ入れた後、半角でスペースを含まない数式 を書いて、バインドしたキーを押下。~
この場合でも "(〜)"で囲まれている場所はスペースが含まれていてもOK
 100*20+3        ;;→ 2,003
 10*(10 + 1 + 3) ;;→ 140
+[$スタート]任意の場所で "$"記号スタートで 半角で任意の数式 を書いて、バインドしたキーを押下。~
この場合は 半角スペースならいくら含まれていてもOK
 $  4 + 5 + 3,000 ;;→ 3,009
 $ 20000 / 300    ;;→ 66.66666666666667
+[@スタート]任意の場所で "@"記号スタートで 半角で任意の数式 を書いて、バインドしたキーを押下。~
この場合、$と同じ動きをしますが、もとの数式は 残したままで 計算結果を カーソルの位置に展開します。
 @  4 + 5 + 3,000 ;;→   4 + 5 + 3,000 3,009
 @ 20000 / 300    ;;→  20000 / 300   66.66666666666667
+["="エンド]数式の最後が "="記号で終わっている場合、もとの数式は 残したままで 計算結果を カーソルの位置に展開します。
 100*20+3=       ;;→ 100*20+3=2,003
 10*(10 + 1 + 3)=;;→ 10*(10 + 1 + 3)=140

** 使い方 (calc-onthespot-region: リージョン指定して実行) [#tac6980c]
+開始位置やスペースを気にせず任意の数式を書いて、バインドしたキーを押下。
 (リージョン開始)
 365 * 24 * 60 * 60(ここでキー押下)
が
 31,536,000
となります。
+改行コードは 半角スペースに変換します。
 (リージョン開始)
 3,000
 /  20
 *  40
が
 6,000
となります。
+[=エンド]数式の最後が "="記号で終わっている場合、もとの数式は 残したままで 計算結果を カーソルの位置に展開します。
 (リージョン開始)
 365 * 24 * 60 * 60 = (ここでキー押下)
→
 365 * 24 * 60 * 60 = 31,536,000

** ケタ区切りの "," の扱い [#nd834b74]
標準では、結果が整数値で 1000を超える場合、3桁ごとに "," を入れます。
.xyzzy/siteinit.lに
 
 (setq *calc-onthespot-thousand-separate-mode* nil)
 
と入れていただければ、この","を入れないようにします。
ただし、計算式にすでに "," が入っていた場合はそちらに合せます。~
※整数値以外の結果、すなわち小数部があっても 3桁毎区切りたい方は... 自由に直してください。~
ソース中にサンプルコードを入れてありますのでご参考までに。

** 全角数字、全角計算記号の扱い [#m38a72e4]
全角数字、記号にも対応します(混在もOK)。英数字(ascii)の範囲で半角に変換してから計算します。結果は半角です。
 (全部全角で)
 ３＊（３００＊２００＋５００）＝
→
 ３＊（３００＊２００＋５００）＝181,500

** 漢数字の扱い [#cb8485f3]
- 漢数字を『無量大数(１０の６８乗)』の桁まで対応しました。大字(壱弐参伍拾廿萬)にも対応しています。
 二億三千万/２０万＝
 ６万８０００＊１．２＝
 弐拾＊六百万＝
 千百十一*3=
 1無量大数2不可思議3那由他/1阿僧祇=
→
 二億三千万/２０万＝1,150
 ６万８０００＊１．２＝81600.0
 弐拾＊六百万＝120,000,000
 千百十一*3=3,333
 1無量大数2不可思議3那由他/1阿僧祇=1,000,200,030,000
- 「０．８万」などの小数＋数詞にも対応しています。
 ０．８万＝8000.0
 10.5百＝1050.0
- 漢数字を使うとき注意点については下記「注意点」をご覧ください。

** 使い方(こつ) [#t1c24ecf]
- 数字のなかの ","を除いてから計算します。このため"1,000*10" などがそのまま計算できる、のはいいのですが、
calcから関数を呼ぶときの引数が２つ以上あるときに困ります。この場合は 引数列挙のカンマの前後どちらかに空白を入れてください。
 gcd(171, 1957) ;→ 19
なのでこういうこともできます。
 gcd(5,548,399 , 1,957) ;→ 19
- 数字と数字の間に 空白しかない場合、"+" 演算子を入れます。
 $1 2 3 4 5 6 7 8 9 10 11 12 ;→ 78
regionで使うと、複数行のsummationをとることができます。
    6,700,212
    9,170,030
  320,113,213
 =
→
    6,700,212
    9,170,030
  320,113,213
 =335,983,455

** 使い方(おまけ 消費税計算＆年齢計算) [#ib4a4b9f]
- calcに ''calc::vat''関数をつけ加えました。''消費税を加算した値''を計算します。(標準では ''1.08'' を掛けて小数点以下を''切り捨て''ます)
 vat(400 100 990 390 110)=2,149
また、計算式の最後に"vat"があったら数式の結果を vat関数にかけて出力します。
 45800vat ;→ 49,464         vat(45800) と同じ
とか
 $ 450 180 1000 800 vat= 2,624
などとなります。
税率と端数の計算方法を変更するには次のようにします。
 (setq *calc-onthespot-vat-rate* 0.05)        ;;5%      (標準は 8%)
 (setq *calc-onthespot-vat-op-frac* 'round)   ;;四捨五入(標準は 切り捨て)
- calcに ''calc::age''関数をつけ加えました。 ''年齢'' を計算します。
:第1引数|生年月日(&Ymd yyyyMMdd形式の整数)
:第2引数|基準日(&Ymd yyyyMMdd形式の整数)。省略した場合はシステム日付
 彼の年齢は$age(19551221)歳です。 ;→ 彼の年齢は58歳です。
やら
 彼の平成26年度の年度年齢は$age(19551221, 20150331)歳です。 ;→ 彼の平成26年度の年度年齢は59歳です。
ということができます。

** 注意点 [#n6e87b06]
- 漢数字を使う場合、チェックが甘いのでご注意ください。例えば「２廿」「０．８万３０００」というのは本来NGな表記ですが、このライブラリでは通してしまいます。例えば次のような解釈をします。
 「２廿」            →「220」         #廿を「二十」と一旦変換するため
 「０．８万３０００」→「11000.0」     #0.8万＋3000 の計算を行う。
 「一万１万三億」    →「300,020,000」 #1万+1万+3億 の計算を行う。
- 漢数字を使う場合、「万」以上の大きさを表す数詞については数値を省略できません。この場合、無視するのでご注意ください。
 「１万万」          →「10,000」      #２つめの「万」に数値がないので無視
 「万千百十」        →「1,110」       #１つめの「万」に数値がないので無視。千、百、十は「1」を補完します。
- 漢数字を使う場合、10の24乗の「じょ」の字として「杼」を使っています。正しくは この文字の偏(へん)を のぎへんにしたものです。文字コードによっては表現できないものなのでこの字で代用しています。
 「三千八十四杼」    →「3,084,000,000,000,000,000,000,000,000」
- 漢数字では、「京」「正」などの一般的な漢字が数詞としてありますので、意図せずに変換される可能性があります。

// **  calc-modeがあるのになんで作ったの？ [#r7803c33]
// calc-modeは素晴らしいですよね。xyzzyの特長だと思うし、気軽に使えるのは最高。~
// だけど単体で使うばかりじゃないし、計算したくなるときは大抵テキスト編集しているわけで。
// その場で計算して入れられればいいな。と思った次第。~
// あと "," を除く一手間が面倒だったんだ。

**  謝辞 [#xec8ac3a]
誰かがすでに必ず作ってると思うので、その方に感謝します。

*** 変更履歴 [#n73ac771]
-[2014/04/08] 漢数字(1以上無量大数[１０の６８乗]まで)に対応。"弐拾＊六百万" など。漢数字ライブラリは別Tipsで独立して公開します。
-[2014/04/07] 全角英数字に対応。結果値の表記に "d0"が入る問題の対処。
-[2014/04/03] 消費税計算関数vat追加しました。デフォルトは 8%です。(2014/04/01 より日本の消費税率は8%になりました。)
-[2014/04/02] calc-onthespot-region 追加。数値間が空白なら"+"を補填。
-[2014/04/01] today,age追加。2値引数の存在に気づいて慌てて直す。リファクタリング
-[2014/03/31] 初版作成。github gist に公開。

** ライセンスなど [#k9b9ce26]
ご自身の責任にてお使い下さい。MIT ライセンスです。

----
total: &counter;
#comment
