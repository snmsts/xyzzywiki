[[拡張lisp]]

*enparamについて [#p51294c1]
xyzzyにおけるパラメータって便利ですよね
 ;;-*- Mode: Lisp; Package: EDITOR -*-
enparamはこの書式を拡張して好きなフィールドをバッファローカル変数に保存することが出来ます。
*何がうれしいの？ [#if04e3fb]
具体的には開発環境を作る際に同じ拡張子でも違う操作がしたいときがあります。~
僕が直面している問題としては~
同じCファイルでも
-コンパイル作業
--make
--nmake
--h8-coff-gcc ->objcopy((CPUタイプは何種類もあるしそれによってまたオプションが変わる))
--bcc32
--gcc((avrだったりintelだったり))
-実行
--出来上がったファイル名（.c,.cppなどからは類推不可能)の実行
--.c->.exeの実行
--実行イメージのROM転送->シリアルターミナルを開く
などなどこまごまとした処理の仕方がぜんぜん違ったりします。~
この場合ちょっとしたパラメータをファイルの中に組み込んで場合わけをすれば自分の作ったどんなファイルも~
オープンしてボタンぽんでbuild and execute !!!((錯乱気味 環境をそこまできっちり構築している時間は無いんだろうけど))
~~
というわけでそんな感じです。~
設定ファイルと試行錯誤をする人でないとたぶん何もうれしくないと思います。

*使い方 [#ocd2140b]
#ref(enparam.l)
をsite-lispに置きいつものように初期化ファイルから読み込みます。必要に応じてバイトコンパイルもしといてね。
 (require "enparam")
 ;; -*- mode:c;make:gcc -*-などを受け取れるようにするバッファローカル変数make-type-paramに保存される。
 (enparam 'make :default "bcc32" :val 'make-type-param)

*どのように実装しているか。 [#fdf5fb31]
はじめからこれらのフィールドは拡張可能に出来ています。~
files.lの*auto-mode-parameter-alist*を扱っているあたりを追っかけてみてください。
----
#pcomment(拡張lisp/enparam/Comment,10,reply)


トップ
