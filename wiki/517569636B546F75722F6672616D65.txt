#freeze
#contents

*フレームはどうでしょ？ [#z335b2a9]

**前口上 [#pa85459e]

今回はxyzzyに付属している''フレーム''という機能について書きます。実のところ、自分はめったにこの機能を使うことが無いのですが :p 、Web上で配布されているLispファイルによっては使用することがあるので紹介しておこうと思います。

その前に、前回までと同じく少しキーバインドのことを書きます。C-qを入力してみてください。入力するとミニバッファに、

 Quote char:

と表示されると思います。そこでさらに C-aと入力してみてください。すると、（ファイルの方に）

 ^A

と入力されますよね。

実はこのC-qは、普段キーボードで入力できないような文字も打ち込むことが出来るんです。今回の例で入力した^Aは、二文字（^とA）に見えますけど、実際には一文字です。この事は、削除しようとすると二つに見える^Aが一緒に消されることからも分かります。文字入力が主体の時にはめったに使わないかもしれないけど、なんかの時に役に立つかもしれません。例えば、普段はtabキーでTabが入力されるんだけど、入力されなくなってしまった場合には、

 C-q tab

と入力すればTAB文字が入力できます。その場しのぎ（とか）設定を一時的に無視したい時に使えます。もちろん、普通の文字も入力できます。（C-q Aと入力すればAが入力されます）

**フレーム（もどき）ってなあに？ [#f17c0da5]

では本題に入ります。''フレーム（もどき）というのは、画面の分割状態を保存してくれる機能''です。これも例を見たほうが早いですね。やってみましょうか。

xyzzyを起動します。表示（V）メニューからツールバー（Q）でフレーム（Ｆ）を選んでください。

#br
#br

CENTER:''フレームを表示させる''
CENTER:#ref(01.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){分かるとは思いますが、念のため。このフレームバーを表示させた方が分かりやすいと思う。};

#br
#br

すると、「Frame 1」という名前がついたタブメニューが表示されます。新しく表示したツールバーはその名の通り、フレームを示すバーです。だから、後述するフレームが切り替わる度に上のタブも替わっていきます。

#br
#br

CENTER:''フレームバーが表示された''
CENTER:#ref(02.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){左にある、''Frame 1''が現在のフレームの名前};

#br
#br

そしたら、とりあえず現在のウィンドウを分割して表示させてみてください。ウィンドウ（W）メニューで横に分割（S）や、縦に分割（V）を選んでください。適当に選択してやってみた図が下です。

#br
#br

CENTER:''画面を分割しておく''
CENTER:#ref(03.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){ウィンドウから選んで、分割しておいてください。（ここまで極端にする必要は無いけど）};

#br
#br

ここまで出来たら、下準備は終了です。フレーム（もどき）なるものを体験するために、M-xを押して、ミニバッファに、

 new-pseudo-frame

と入力してみてください。newくらいまで入力したら、Tabキーを押すと、補完されて便利です。すると、新しいフレームが作られます。名前は''Frame 2''です。

#br
#br

CENTER:''新しいフレームを作る''
CENTER:#ref(04.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){フレームメニューバーの''Frame 2''が少し浮き出てる所に注目！！};

#br
#br

実際にやってもらえばわかると思いますけど、Frame 1でウィンドウを色々分割したのがFrame 2では一つの大きなウィンドウしか表示されていませんね。

Frame 1に戻ってみます。ミニバッファを使ってやる方法もあるんです((後述します。))が、とりあえずマウスで''Frame 1''のタブをクリックしてみてください。すると、ウィンドウを分割した状態が保持されてますね。

これがフレーム（もどき）です。つまりは各ウィンドウの状態を保存しておく機能です。なぜ（もどき）というのがついているのかはよく分からないけど、((xyzzyに添付されているhtmlやxyzzyMaling Listに目を通すと書いてあるかも。))面白い機能ですね。

ちなみに、前回のセッションファイルの項ではフレームについては書きませんでしたけど、''セッションファイルを保存する時に、フレームの情報も保存''されます。従って、セッションファイルには、開いているファイル、行カーソルの位置、モード、フレーム（他にもあるのかも。少なくても左の4つは）保存されるようです。

**フレームに関するコマンドなど [#x6d0b89d]

自分はあまりこの機能を使うことが無かったので、知らなかったのですが、これを機に調べてみました。結構色々ありますね。

と言うことで、まとめてみました。左側がコマンドで、右が機能です。ミニバッファで左側の文字を入力すると試せます。 xyzzy側であらかじめキーバインドに割り付けられているものについては、そのキーバインドも表示してあります。((でもこのキーバインドって打つのはしんどいなぁ……。))

|関数名 [キーバインド]					|一言説明			|h
|delete-pseudo-frame [C-x 6 0]（オーではなく、ゼロ）	|現在、前面にある（=使用している）フレームをなくす。一つしかない場合には、ウィンドウの分割表示されなくなり、通常起動時のようになる。|
|new-pseudo-frame [C-x 6 2]				|新しいフレームを作る。既にフレームがx個作った場合、新しいフレームの名前は「Frame x+1」となる。「作った場合」というのは、フレームを削除した時にもそれがカウントされているから。（[例]フレームが既に4つ作り、（2つ削除して）現在2つあるならば、新しく作ったフレームの名前は「Frame 5」となる。）|
|next-pseudo-frame [キーバインドはない]			|現在いるフレームよりも後に作成したフレームへと移動する。実はother-pseudo-frameと同じみたいです。((snowさんのご指摘より。))|
|other-pseudo-frame [C-x 6 o]（こっちはオー）		|現在いるフレームよりも後に作成したフレームへと移動する。実はnext-pseudo-frameと同じみたいです。((snowさんのご指摘より。))|
|previous-pseudo-frame [C-x 6 p]			|現在いるフレームよりも前に作成したフレームへと移動する。((snowさんのご指摘より。))|
|rename-pseudo-frame [キーバインドはない]		|フレームの名前を好きな名前に変更できる。変更したい名前をミニバッファに入力すればOK。|

と言う感じでしょうか。ちなみに、ミニバッファにaproposと入力して（Enterを押してから）、frameと入力すると、frameに関係したコマンドが表示されます。入力する文字をlineにすれば、lineに関係したコマンドが表示されます。上のはそうやって調べてみました。

**あんまり使ってないからか……。 [#a5ad9044]

実感に乏しい説明だったかも。おそらく、フレームをバリバリ使う人はKamailとか2chモードを併用しながらファイルも編集する、見たいな感じで使っているのではないかなぁ。自分はどちらも入れていないので、フレームを使う必要が無いのですね。

おそらく普通に文章を編集する（とかプログラム言語のソースを書く）と言う目的だけならば、使わない機能かもしれません。逆に、xyzzyで色々とこなす人には必須の機能かも。

次回はこれまた強力な''Grep''という機能の話です。
