#freeze
#contents

*置き場所を決める [#de2443ba]

**前口上 [#fd640efa]

xyzzyを置く場所を決めます。一回目ではデスクトップ上でちょこちょこといじっていましたが、もっと本格的（？）に使うために、色々と設定しなければなりません。まぁ、デスクトップ上に置いてあったとしても、一人で使う分には全く問題ないような気もするのですが……。

本格的に使うということは、言い換えれば、自分の使いやすいように変更する（＝カスタマイズ）ということです。このページではその準備として、カスタマイズのためのファイルを用意します。

**カスタマイズするためのファイルは.xyzzyとsiteinit.l [#t611fda3]

それでは早速。自分の使いやすいように設定するためには、その専用のファイルを用意するらしいです。そのファイルに、色々と自分の好きなこと((たとえば自分の好きなキーを押したら何か操作を実行するなど。))を書くことで、自分の好きなように''xyzzyの機能を変化させたり、機能を追加させたり''することができます。

ではそのファイルを（一応）用意しておきましょうか。たとえ自分ではカスタマイズする気が無くても、たとえば[[ひえ]]さんの[[ページ:http://hie.s64.xrea.com/xyzzy/]]にたくさんある拡張Lispのプログラム((ソースですか？))をそこに書くだけでいろいろと便利な機能が使えるようになりますし。

xyzzyではそのカスタマイズ用のファイルとして二つのファイルを使うことができます。それが節名のとおり''.xyzzy''という名前のファイルと、もうひとつ''siteinit.l''という名前のファイルです。

**その前に [#a4c22935]

xyzzy.exe((ちなみにxyzzyのアイコンの甲羅を見ると……。))がおいてあるフォルダを開いてみてください。ダウンロードした時には無かったはずのxyzzy.wxp（等）の名前のファイルが新しくできているはずです。

#br
#br

CENTER:''xyzzyを一度も起動していない状態''
CENTER:#ref(01.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){ダウンロードして解凍したばっかの状況はこんな感じ（だったと思う）};

#br
#br

CENTER:''一度でも起動した後の状態''
CENTER:#ref(02.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){一度でも起動してみたら（なんでかよくわかんないけど）xyzzy.wxpというファイルが作られています。};

#br
#br

上の画像を見てもらえばわかるとおり、''xyzzy.exeがある場所とおんなじ所にxyzzy.wxpとか言う名前のファイルが作られて''います。((ちなみに、拡張子はちょっと違うかもしれません。windows2000を使っている人は、xyzzy.w2k、Meを使っている人はxyzzy.wmeというように、''xyzzy.（使っているOSの名前とか数字）という名前のファイル''ができるようです。例えばwindows95ならば、xyzzy.w95となります。))

このファイルは何だろう、とか思って試しに開いてみます。すると……。

#br
#br

CENTER:#ref(03.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){なんかよくわからない文字列が並んでいますね。};

#br
#br

不思議な文字がずらっと並んでますね。このファイルは、xyzzyを起動する時に無かったら新しく作られるんです。名前を''ダンプファイル''と言います。

**そのダンプファイルて何？ [#kc1a2de9]

そのダンプファイルとは何なのか……。自分も良くわかっていないのですけど、xyzzyが起動するときに読み込んだデータを、より高速に呼び出すために変換されたデータファイルです。

最初に起動した時にやけに起動が遅かったのは、このダンプファイルってのを作っていたからです。二回目からは起動が早くなりましたよね？
このダンプファイルがあると起動が早くなる((ダンプファイルの中身は、いわゆる機械語みたいなxyzzyが''高速に読み込めるデータ''らしい。起動するときに定義されていた変数や関数をより高速に読み込むために、一つのファイルにまとめておくそうです。ただし、ここでいう機械語とは、純粋な意味の機械語ではなく、たんなる比喩ですので注意してください。))みたいです。

***ダンプファイルがない場合にはどうなる？ [#c5e168ed]

ためしに勝手に作られたダンプファイルを違うところに移動させた後にxyzzy.exeを起動してみましょうか。すると、ダウンロードしてから初めて起動した時のように、ウィンドウができて実際に文字が入力できるようになるまでに多少時間がかかります。起動させた後に再びフォルダを見ると、ダンプファイルは''新たに作成されています''よね。二回目からは移動させる前と同じようにすばやく起動できるようになると思います。

ちなみに余談になりますが、何でダンプファイルの拡張子がwindowsの種類によって違うのかについて、作者の亀井さんは、メーリングリスト内（2338通目）で、

>フォーマットは一緒ですが、シェルなど設定値が違うものがあります。

と答えられています。(([[NANRI]]さんのご指摘に感謝します。))

**今までの話をまとめると…… [#e0e9f297]

こんな感じの絵になると思います。

#br
#br

CENTER:''ダンプファイルの説明''
CENTER:#ref(04.png,center,100%)
CENTER:#img(,clear)

#br
#br

最初に起動する時に時間のかかる理由はダンプファイルを作るためのようです。ダンプファイルがないと、xyzzy.exeを起動した時に自動的に作ります。変なファイルとか思っても消さないように。 :p 

そういえば、もう一つ新しく作成されているものがあります。xyzzy.exeのあるフォルダの中に''usrという名前のフォルダ''がそれです。これも大事なファイルが入っているのでいじらない方が良いです。このフォルダも上のダンプファイルと同様に、無い時には自動的に作られるようです。また、こちらはWindowsにログインする時の名前によってフォルダが別々に作られ、さらにOSごとにフォルダが作られています。

**実際に作成する [#ee34f34e]

少し横道にそれたので、本題に戻ります。

まず、二つのファイルを作る前に、xyzzyのフォルダを自分の好きなところに移動させておいてください。例えば、起動ディスクのProgram Filesの中とかかなぁ。

#br
#br

CENTER:''ここにおいてみた''
CENTER:#ref(05.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){とか上で言いながら、自分はMy Documentsの中（のさらに中）に置いてありますけどね。};

#br
#br

これでファイルを作る準備ができました。

***siteinit.lの作成 [#t33e2d4f]

どっちが先でもいいような気がしますけど、とりあえずsiteinit.lのファイルを先に作ろうと思います。

ファイルを作る場所は''xyzzy.exeのある所にあるsite-lispというフォルダの中((ユーザーで使っているとsite-lispフォルダではなくusr/ユーザー名フォルダの中でしたby入門中 on 98se))''に作ればOKです。
xyzzyを起動させて、何も入力せずに「ファイル(F)」メニューから「名前を付けて保存(A)」を選んで、名前をsiteinit.lに変更して保存してください。

#br
#br

CENTER:''ファイルから名前を付けてを選択''
CENTER:#ref(06.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){「ファイル(F)」の「名前を付けて保存(A)」を選ぶ。};

#br
#br

CENTER:''siteinit.lで保存''
CENTER:#ref(07.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){siteinit.lという名前で、site-lispのフォルダの中に作成する。自分はフォルダの名前につられて最初site-init.lとハイフンを入れてましたけど、それは間違いです :) };

#br
#br

これで一つ目のファイルは完成しました。

***.xyzzyの作成 [#be3b1262]

二つ目のファイルである''.xyzzy''を作ります。こちらは前に作ったsiteinit.lとは違って、特に置き場所は指定されていません。しかし、どこに.xyzzyがおいてあるのかを''環境変数に登録''する必要があります。自分以外にxyzzyを使う人がいないような場合には、xyzzy.exeがあるところとかに作ればいいと思います。反対に自分以外の人もxyzzy.exeを使うかもしれない場合には'''My Documents'''の中とかが良いでしょう。

自分の場合、xyzzy.exeと同じ場所に作っておきました。

#br
#br

CENTER:''.xyzzyを保存''
CENTER:#ref(08.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){前とおんなじ要領でできます。このファイルは自分とすっかりおんなじ場所でなくてもOKです。};

#br
#br

二つのファイルができました。これで大体終わりです。

ちなみに気づいた人も多いと思いますけど、.xyzzyってのは拡張子だけのファイル((Windows的に言うと。))ですね。普通ならばreadme.txtみたいに必ずファイル名+拡張子という風になっているのがほとんどだと思いますけど、Unix等では設定ファイルは'''.configure_file_name'''と、先頭がドットで始まることも多い((もちろんそれだけじゃないけど))ので、xyzzyはそちらの流儀にあわせたのだと思います。まぁ、あんまり気にしなくてもいいと思います。

***ファイルの確認 [#o662e9ea]

一応できていると思いますけど、確認しておこうと思います。

#br
#br

CENTER:''siteinit.lのある場所''
CENTER:#ref(09.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){必ずsite-lispというフォルダの中に入れておく。};

#br
#br

CENTER:''.xyzzyのある場所''
CENTER:#ref(10.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){こちらは好きな場所で。一人でxyzzyを使う分には自分とまったく同じところでも困らないと思う。};

#br
#br

**環境変数の登録（.xyzzyの場所をwindowsに知らせておく） [#s601f61e]

次の作業が終わったら今回は終了。それは前にも言った環境変数の登録です。

これを登録すると、登録した場所から.xyzzyを読み込むようになります。ではさっそく。
まずマイコンピュータのプロパティをマイコンピュータのアイコンを右クリックしたりしてプロパティ(R)を選択する。

そしたら、「詳細設定」タブのところにある「環境変数」ってボタンを押します。

#br
#br

CENTER:''環境変数ボタン''
CENTER:#ref(11.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){ボタンを押す。};

#br
#br

下みたいな画面が出ますよね。きっと。

#br
#br

CENTER:''環境変数のウィンドウ''
CENTER:#ref(12.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){こんな画面だと思う。};

#br
#br

そしたら、上の方にある新規のボタンを押します。（画像では「kurinoのユーザ環境変数(U)の方です。）

すると、なんか二つ入力する画面が出ると思いますけど、それはそのままにしておいて、''.xyzzyのある場所のパスをコピー''します。.xyzzyのある場所を開いていたらそこのパスをコピー、閉じてしまっていたら、再び開いてコピーすると間違いが無いので楽です。自分はxyzzy.exeのある場所とおんなじだからそこのパスをコピーしました。

そしたら、さっきの環境変数の画面に戻って、上のところに''XYZZYHOME''と入力して、下の方にコピーしたパスをペーストします。入力したら「OK」ボタンを押しましょう。

#br
#br

CENTER:''登録する''
CENTER:#ref(13.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){上にはXYZZYHOME、下にはさっきのパス。};

#br
#br

登録が終わると、新しくXYZZYHOMEという名の環境変数ができていると思います。

#br
#br

CENTER:''登録後''
CENTER:#ref(14.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){新しくできてますよね。パスは全部見えてませんけど……。};

#br
#br

これで終了です。ここで、Windows を再起動すると設定した環境変数が確実に反映されます。

**設定終了 [#j86de22e]

今回はこれで終了です。なんか長かったのは気のせいか？これでいろいろとxyzzyの設定を自分の好きなように変更する準備が整ったことになります。

***.xyzzyとsiteinit.lに何かを書いて試してみる [#o6686283]

せっかく二つのファイルを作ったんで、実際に何かを書いて試して見ましょうか。

ためしに、.xyzzyに、

 (global-set-key #\C-0
                 #'(lambda()
                     (interactive)
                     (insert ".xyzzyから読み込んだよー\n")))

と書いて保存してください。そして、xyzzyを再起動（終了させてもう一度起動しなおす）します。
xyzzyを起動させた後、、Ctrl-0（ゼロ）を押すと、

 .xyzzyから読み込んだよー

と、文字が入力されているはずです。

もう一方のsiteinit.lにも何か書いてみましょうか。.xyzzyの時と同じように、siteinit.lに、

 (global-set-key #\C-9
                 #'(lambda()
                     (interactive)
                     (insert "siteinit.lから読み込んだよー\n")))

と書いて同様に保存してください。.xyzzyの時と同様に再起動しても''siteinit.lから読み込んだよーとは文字は入力されません''よね？

うーむ。なんで？と思う人もいると思うので説明しますと、siteinit.lを編集した時には、.xyzzyのように、単純に保存して再起動するだけでは変更部分は反映されないのです。''siteinit.lの中身を反映させるには、冒頭で説明したダンプファイルというファイルをもう一度作り直す必要があります。''

もしsiteinit.lを編集（して、それをxyzzyに反映させたい）時には、ダンプファイルを一度違う場所に移動させたりして、''新たにxyzzy.exeにダンプファイルを作ってもらわないとダメ''なんです。((ダンプファイルを作り直すには、ダンプファイル自体をどこか別の場所に移動させる方法以外にも、xyzzy.exeをCtrlキーとShiftキーを押しながら起動する方法があります。好きな方を使ってください。))

ちなみに、このページの最初の方のダンプファイルについての説明はこのためにしていました。まぁ、自分はCtrlとShiftを押しながら起動するのは面倒なので、siteinit.lを編集した時にはダンプファイルを別の場所に移動させて起動するようにしてます。

実際にダンプファイルを作り直してからCtrl-9を押してみると、と、siteinit.lに入力したコードが反映されて「siteinit.lから読み込んだよー」という文字列が入力されるようになると思います。

#br
#br

CENTER:''実際の例とか''
CENTER:#ref(15.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){入力されてます？？};

#br
#br

siteinit.lはダンプファイルを作り直さないといけないので面倒くさいかもしれませんけど、.xyzzyに書くのと比較して起動が速いです。逆に、.xyzzyの中身はダンプファイルを読み込んだ後に、いちいちコードを読み込むので、読み込む量((ほぼ、.xyzzyのファイルのサイズと思ってもらってよいです。拡張Lispなどをインストールするとそれを読み込む時間がさらにかかったりするので、一概にはいえませんが、今段階ではあまり気にしないで良いでしょう。))によっては起動に時間がかかることもあるかもしれません。

さらに、siteinit.lに書いたものはxyzzy.exeを使うユーザの人全てに反映されます。逆に.xyzzyは（ユーザーごとに環境変数を違うところに登録すれば）自分以外の人には反映されません。（さらにもう一つ。siteinit.lと.xyzzyはxyzzy.exeがLispのコードを評価する時が異なります。だから.xyzzyに書くと使えたコードがsiteinit.lに書くと無意味になったりすることもあるんですが、難しい話なので、とりあえず当分は気にしなくても良いと思います。）

''どっちに書けばいいのかわからないよー、って時には.xyzzyに書いておく''と良いと思います。それでたくさん書きすぎて''起動に時間がかかるようになったら、siteinit.lに移動させたりする''と良いかもしれません。

ちなみに、上記の設定を元に戻すには、.xyzzyなら記入した内容をすべて消して、何も入力されていないファイルにしておけば、再びxyzzyを起動させたときには上の文字列が入力されなくなっていると思います。またsiteinit.lならば、.xyzzyと同様に内容を削除した後に、ダンプファイルを作り直します。（その理由は今まで説明したとおりです）

つまり、''siteinit.lに変更を加えた後は、単にxyzzyを再起動するだけではダメで、必ずダンプファイルを作り直す作業をセットで行う''、と覚えておくといいと思います。

**さてと [#h7745929]

これでxyzzyを使うための準備は完了しました。次回は共通設定を説明しようと思います。
