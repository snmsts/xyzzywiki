#freeze
#contents

*モードってなあに？ [#i07350a1]

**前口上 [#w74cd00f]

既に普通に使う分には困らないと思いますが、一応モードの説明もしておきます。おそらく、この説明がすめば、普通に使う分には困らないと思います。要は今回の説明が終わったら、大体説明終了です。 ((後は.xyzzyやsiteinit.lに自分の好きなようにカスタマイズする方法について書くくらい))

今回は''モード''と言うものの説明と、それに関することを説明します。

**その前にまた少しキーバインドの話 [#v2f58d85]

C-lを押してみると、現在行カーソルのある行が画面の中央に移動します。((本当はそれだけでなくて、画面の再描画も行っていますが))なかなか便利です。

**モードとは [#lb34607c]

モードとは、''ある作業を行うのに便利な機能を、一まとめで提供してくれる機構''です。なんかわかりにくいんですが、それ以外の説明が思い浮かびませんでした。

早速ですが、モードの実際の例を見てください。

#br
#br

CENTER:''実際の例''
CENTER:#ref(01.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){モードです。(えっ！！とか)};

#br
#br

見たらわかるとおり、ただのxyzzyのウィンドウですね。それ以外の何者でもないんですけど、ちょっと良く見てください。
前回説明したミニバッファの上のところに、モード行と言うものがあったことを覚えていますでしょうか？(ウィンドウが小さいので、クリックして拡大しないとわかんないかも。黒い背景に白い文字が小さく並んでいる部分のことです) ↑の場合、モード行に、左から、

 ----- *scratch* (Lisp Interaction) [sjis:crlf]                   1:1

と書かれていますよね。左の五つの "-" は、ファイルの状態を表す部分で、状態により変化します。(詳しい説明は省きます) その右の*scratch*は開いているファイル名です。実はその隣の''(Lisp Interaction)が開いているファイルのモード''を表示しています。今回の場合にはLisp Interaction-modeと言うモードです。 (ちなみに、その右の方は今回はあまり関係ないんですが、[sjis:crlf]はそれぞれ、文字コード(今回の場合はShift_JIS)と、改行コード(今回の場合はCRLF)を示しています。Windowsのメモ帳などで作成されたファイルはShift_JISで、CRLFです。その右の1:1は、行カーソルのある位置です。左が行番号で、右が桁数((半角文字を1桁分、全角文字を2桁分として計算します))です。21:3なら、21行目で先頭から3桁目ということです。)

xyzzyを起動した状態では、上記のようになっているかと思います。何かファイルを開いてみましょうか。
自分は.lと言う拡張子のファイル（xyzzyのLispファイル）を開いてみました。

#br
#br

CENTER:''$XYZZY/lisp/app-menu.lを開いてみた所''
CENTER:#ref(02.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){Lispのファイルを開いてみました。};

#br
#br

開いてみるとわかると思いますが、ところどころ文字の色が黒から緑色っぽくなっています。こんな風に''モードによって、色が変わったり''します。また、モード行のところもちゃんと''(Lisp)''と変わっていますね。

さらに違う拡張子のファイルを開いてみます。今度はHTMLファイルでも。

#br
#br

CENTER:''HTMLファイルを開いてみた所''
CENTER:#ref(03.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){HTMLのファイルを開いてみました。};

#br
#br

HTMLファイルも前回のLispのファイルと同様に、所々色が付いています。前回と同様モード行の表示も変わっていますね。また、<H　が含まれる行は背景色が青で文字色が白で表示されていることもわかります。HTMLを書いたことがある人ならわかるかと思いますが、かなり見やすくなりますね。

他にも試しに、いろんなファイルを開いてみてください。例えば、C言語のファイルとか、Perlスクリプトのファイルとか、txtのファイルとか、何でもいいです。

**色が付かないものもある [#nfde88fe]

たくさんのファイルを開いてみればわかると思いますが、ファイルが違うと、色が付いたり、付かなかったりします。それはなぜかと言うと、''その拡張子にセットされたモードがxyzzyに入っていないから''なんです。

例えば、PDFファイルを開いてみました。すると、下のようになります。
PDFファイルを開いてみた所


#br
#br

CENTER:''PDFファイルを開いてみたところ''
CENTER:#ref(04.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){PDFファイルを開いてみました。};

#br
#br

PDFファイルはテキストエディタで編集するファイルではないので、xyzzyはPDFファイルを開いた時にどのモードにするのかを指定していません。((PDFファイルはAcrobat Readerとかで読むのが普通だから。))

モード行を見てみると、

 (Fundamental)

と表示されていますよね。この''(Fundamental)と言うのは、xyzzyであらかじめ指定していないファイルを開いた時になるモード''です。xyzzyでは、あらかじめ良く使用されるであろう拡張子は、自動的に適切なモードになるように決められています。上記のようにxyzzyでどのモードなのかを指定されていないファイルを開いた時には、Fundamental-modeになります。

例えば、拡張子の無いファイル(ReadmeJだけで、.txtが付いていないファイル)を開いた時とかは、Fundamental-modeになります。((Fundamentalは(おそらく)「基本的な」と言う意味ではないかなぁ。))

また、xyzzyで開かれるファイル((というかバッファ))は全て、何らかのモードに属します。例えば、キー割り当てのバッファはFundamental-modeと言うよう、にです。

**拡張子に関係なくモードを変えたい [#ce06cf4e]

ではFundamental-modeを切り替えるにはどうしたら良いのでしょうか？それには前回説明したミニバッファを使います。''M-xを押して、ミニバッファをアクティブにした後、〜〜-mode'' とモード名を入力すれば変更できます。試しに、htmlのファイルをc-modeに変更してみました。

#br
#br

CENTER:''HTMLファイルをhtml-modeからc-modeへと変更してみる(M-xの後 "c-mode" と入れる)''
CENTER:#ref(05.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){c-modeに変更してみた。色付けが無くなり、モード行には(C)と表示されている。};

#br
#br

今回の例はあんまり実用的な例ではないけど、例えば、PerlでCGIのソースを書いている時とかに、ヒアドキュメントで一部分はHTMLのタグを書いているときとかの場合に有効です。((わからないひとは気にしないで……。))また、拡張子の無いファイルでも有効かもしれません。ほかには、例えば、掲示板やPHP等で作成されたページをInternet Explorer等のWebブラウザで自分のHDとかに保存した場合には、拡張子が必ずしも.htmlや.htmでない場合があります。((例えば、PHPだったら. phpとか)) それらのファイルをxyzzyで開いた時にはhtml-modeにすると見やすくなったりしますね。


#br
#br

CENTER:''html-modeを例に取ると……''
CENTER:#ref(06.png,center,100%)
CENTER:#img(,clear)
CENTER:&size(10){.phpでもhtmlだから、html-modeにすると見やすいような。(PHPを書くときはダメだけどね)};

#br
#br

上記のように、ミニバッファで指定すれば、任意のモードに変更することもできます。

**モードは色付けだけではない [#tded6f74]

***その1:キーバインドも変わる [#bc7f6045]

モードは単にファイルを見やすく色付けするだけではなくて、いろんなことをしてくれます。一概に全てがそうとは言い切れないんですが、''モードごとにEnterキーやTabキーを押した時の動作が変わったり''、あるいは、''独自のキーバインドを備えていたり''します。((最初にモードの説明をした時に、なんかわかんない説明だったのはいろんなことを総合的に変えてくれるからなんです。その例として最初は(わかりやすい)色付けを例に取りましたが、それだけでなく、テキストの折り返し文字数をモードごとに変えたりもできます。))

自分は、このページを書くのにHTML+-modeと言うモードを使っています。これを例に取ると、html+-modeの時にはキーバインドが普段とは異なるものになります。

''キー割り当てを知るには、「ヘルプ」→「キー割り当て一覧」を見てください。''Local Bindingsと、Global Bindingsの二つに分けて表示されます。このうち、Local Bindings:のところには、そのモード専用のキーバインドが表示されます。下の画像では、ズラズラッとhtml+-mode専用のキーバンドが表示されています。

#br
#br

CENTER:''html+-modeを例に取ると……''
CENTER:#ref(07.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){右のウィンドウがキーバインド。Localはhtml+-modeのみで使用できる。(下のほうにある)Globalはどのモードでも使用できる。};

#br
#br

モードごとにキーバインドがいろいろと変更になるので、あまり具体的な例はできないんですが、自分の良く使うモードのキー割り当てを見ておくと、良いかもしれません。頻繁に使う作業が簡単にできるコマンドがキーバインドに割り当てられていたりすることもあります。英語の簡単な説明で分かりにくいコマンド名もあるかもしれませんが、自分の知っているキーバインドの名前から連想したりすれば、大体分かると思います。

***その2:ファイルだけでなくって…… [#ud2fe575]

今まで見てきたようにファイルを編集する時にいろいろ便利にしてくれるもろもろをモードと呼んでいるんですが、ファイルの編集に限らず、''xyzzyを使用してIRCのチャットをするモード''や、''2ちゃんねるを見るためのモード''等もあります。ある''作業に特化した機構をモード''と言うのかもしれないです。

**モードが無い時は「探す」、もしくは「自分で作る」 [#o6a25bd6]

xyzzyにはあらかじめよく使われるであろう言語などのモードは標準で入っています。しかし、例えばスクリプト言語で有名なRuby用のモードとかは最初からは入っていません。そうでなくても、xyzzyに慣れてきた結果、xyzzyの中だけでいろいろなことを行いたく思うようになるかもしれません。そんな時には新たにモードを入れると良いです。

比較的有名な言語のモードの場合には、既にだれかが公開しているかもしれません。とりあえずは探してみると良いと思います。また、HIEさんのLinkのページには(おそらくほとんどが)網羅されていると思います。

探しても見つからなかった場合には、自分で作ることも可能です。((だけど、自分には説明できません。 :( ))これに関しても[[HIEさんの所:http://hie.s64.xrea.com/xyzzy/]]に詳しい説明がありますので参照してみてください。

**メジャーモードとマイナーモード [#y07db8d7]

今までで大体の説明は終わりですが、実はモードには2種類あります。メジャーモードとマイナーモードと呼ばれています。今まで説明してきたのはメジャーモードです。これまで見てきたように、メジャーモードと言うのは、1つしか指定できません。例えばhtml-modeからc-modeに変更したら、html-modeの色付けやキーバインドは使えなくなってしまいます。

逆にマイナーモードはメジャーモードと共存できます。例えば、html-modeの時に、M-xの後、

 box-drawings-mode

と入力すると、Ctrl-矢印キーで罫線が書けるモードになります。この時、元のモードであるhtml-modeはそのままです。切り替わりません。

さらに、マイナーモードは複数あってもOKです。辞書引きモードと罫線モードを共存して使ったりもできます。

#br
#br

CENTER:''マイナーモードならば共存も可能''
CENTER:#ref(08.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){HTMLとBoxとEdict上のウィンドウのモード行を見ると、(HTML :BoxDraw Edict)と表示されています。メジャーモードはHTMLで、その中でマイナーモードの罫線モードと辞書引きモードを使用しています。};

#br
#br

**Lispを書けるようになるとさらにいろいろできる [#sae90b96]

Lispを書けるようになるとさらにいろいろできるようになるらしいです。例えば、perl-modeでは行番号を表示するけど、text-modeの時には行番号は表示しないようにする、とか、モードごとにあるキーを押した時の挙動を変更させるとか、もう色々と、です。それについては後で説明できたらと思います。

**一応終了 [#s8fae7fe]

モードの説明はこれくらいでしょうか。モードごとの特化した内容はもう少ししてからにしようと思います。

とりあえずは、

- モードはある作業に特化した状況を作ってくれる機能
- xyzzyで編集中のファイルは必ず何かのモードに属している
- 具体的には色付けやキーバインドの変更とか
- （拡張子によって）ある程度は自動的に決まるが、決まらない時はFundamental-modeになる
- 明示的に変更するにはM-x 〜〜-modeと打ち込む
- 無い場合には、探すor自分で作る（おそらく探すとある）
- メジャーモードとマイナーモードがある

と言うところでしょうか。後は、Lispが書けると色々できる、ってところも重要かもしれません。

さて、今回まででxyzzyを普通に使う上での7割くらいの説明を（大雑把にですが）やったように思います。後は、使っていけば、少しずついろんなことがわかってくると思います。

なんか難しい話が続いたような気がするんですが、次回はそんなに難しい話ではありません。次回は、編集中のファイルの状況をまとめて保存しておける「セッションファイル」についてです。
