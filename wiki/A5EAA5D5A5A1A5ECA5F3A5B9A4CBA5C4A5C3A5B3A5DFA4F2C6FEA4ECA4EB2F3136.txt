*open

-ページ: [[リファレンスにツッコミを入れる]]
-投稿者: [[koji]]
-優先順位: 低
-状態: 完了
-カテゴリー: ツッコミをいれる
-投稿日: 2003-09-07 (日) 15:59:13
-バージョン: 

**メッセージ
オプションの値に抜けがあるようなので追加してみました。

   FILENAME           : ストリームを作成するファイル名を指定します。
   :DIRECTION         : ストリームの入出力の方向を指定します。
         :input          入力（省略時）
         :output         出力
         :io             入出力
         :probe          ファイルテスト？
                         戻り値のストリームは無効になっています。
   :IF-EXISTS         : ファイルが存在する場合の動作を指定します。
         :error          エラーを出力します。（省略時）
         :skip           エラーは出力せず、nilを返します。
         :append         既存ファイルに追加します。
                         ストリームの位置はファイル終端になります。
         :overwrite      上書きします。
         :new-version    ファイルを作成します。
                         既にあれば上書きされます。
         ---- 以下詳細不明 ----
         :supersede      更新？
         :rename         リネーム用にストリームを開く？
         :rename-and-delete  リネーム用にストリームを開く？
   :IF-DOES-NOT-EXIST : ファイルが存在しない場合の動作を指定します。
         :error          エラーを出力します。（省略時）
         :create         エラーは出力せず、入力ファイルを作成します。
   :ENCODING          : エンコーディングのモードを指定します。
         :binary         バイナリモードです。
         :text           テキストモードです。（省略時は:text）
                         改行がコードが*default-fileio-encoding*に依存します。
         :canonical      :text と同じ意味になります。
         :raw            改行コードの扱いが、LF のみになります。
                         それ以外は :text と同じです。
   :SHARE             : ファイルの共有モードを指定します。
         省略時　　　　　:direction が :input または :probe なら :read に、
                         それ以外は共有不可になります。
         :read           読み取りの共有が可能になります。
         :write          書き込みの共有が可能になります。
         :read_write     読み書きの共有が可能になります。

それと with-open-file の ''seealso'' に open があるといいかと思います。

----
-詳細な説明ありがとうございます。with-open-fileのseealsoにも追加しました。 -- [[山本]] SIZE(10){2003-09-07 (日) 18:13:43}
-:read_write は :read-write の間違いでした。 -- [[koji]] SIZE(10){2003-09-07 (日) 20:02:57}
-直しました。ありがとうございます。 -- [[山本]] SIZE(10){2003-09-10 (水) 08:47:28}

#comment
