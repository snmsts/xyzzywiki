#freeze
#contents

*clickable-uriを導入しよう [#g708fcf3]

**前口上 [#q106e2db]

今回は拡張Lisp導入の最初と言うことで、設定項目が少なさそうなclickable-uri.lを導入しようと思います。

**clickable-uriとは？ [#t8450eec]

clickable-uri.lはOHKUBO Hiroshiさんが[[雑記帖>http://ohkubo.s53.xrea.com/]]にて公開されている拡張Lispです。このlispファイルを導入すると、バッファ内のURI((Uniform Resource Identifier : http://などのURLやメールアドレスだけでなく、file:ではじまる文字列などもさす。))を強調して表示したり、URIのダブルクリックでブラウザやメーラなどを起動できます。また、モードごとに強調表示の有無を設定も行えます。[[OHKUBO]]さんご自身の説明は以下の通りです。

  ;; Description:
  ;;
  ;;  左ダブルクリックによる WEB ブラウザ、メーラー等の起動を可能にします。
  ;;  URI (Uniform Resource Identifier) 強調表示も行います。

ダブルクリックだけでなく、自分の好きなキーバインドでURIを開くようにすることもできます。

私的にとても便利に使わせてもらっているので、これから書かせてもらいます。

**ダウンロードする [#s515c256]

ではダウンロードして設定を行いましょう。NetInstallerをすでに導入済みの人は、NetInstallerで導入するのが楽です。NetInstallerを使用せずとも導入はできます。今回は両方の方法を説明します。

***NetInstallerなしで導入する場合 [#ja47b618]

[[雑記帖>http://ohkubo.s53.xrea.com/]]の一番上にあるxyzzyについて少しと言うリンクをたどるとあります。clickable-uri.l以外にも沢山のlispを公開されていますが、今回はclickable-uri.lをダウンロードします。

#br
#br

CENTER:''clickable-uri.lをダウンロード''
CENTER:#ref(01.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){画像なんて入れなくても分かるだろうけど……。};

#br
#br

ダウンロードしたら、圧縮されているので解凍します。その後、$XYZZY/site-lisp/に移動させましょう。

***NetInstallerで導入する場合 [#oaa72647]

NetInstallerで導入する場合には、雑記帖 → clickable-uriでIを押してインストールします。インストールが終わったら、qなどを押してNetInstallerを終了します。

**clickable-uri.lの説明書を読む [#zb92bfaf]

ファイルの移動やNetInstallerでインストールが完了したら、$XYZZY/clickable-uri.lのファイルを開き、説明を読みましょう。

Installation:という項にインストールの方法が書かれています。1.のsite-lispへのコピーは済んでいるので、2からが重要です。見てもらえば分かるとおり、以下を行えば良いようです。（以下は説明文の引用です。）

  ;;      2. 必要ならばバイトコンパイルします。
  ;;
  ;;              M-x byte-compile-file
  ;;              Byte compile file: $XYZZY/site-lisp/clickable-uri.l
  ;;
  ;;      3. ~/.xyzzy または $XYZZY/site-lisp/siteinit.l に以下のコードを
  ;;         追加します。
  ;;
  ;;              (require "clickable-uri")
  ;;
  ;;      4. 必要ならばキーバインド設定のコードを追加します。
  ;;         （左クリックについては標準でキーバインドを変更します。）
  ;;
  ;;              例：
  ;;              (global-set-key #\C-l 'clickable-uri-recenter)
  ;;              (global-set-key '(#\C-c #\C-o) 'clickable-uri-open)

一応最初と言うことで、手順を説明します。

***バイトコンパイルって何？ [#ud0754d8]

2の、

  ;;      2. 必要ならばバイトコンパイルします。

の''バイトコンパイル''というのは何でしょうか？バイトコンパイルというのは、xyzzyをより高速に動作させるために、既存のlispファイルをコンパイルしておく事です。

バイトコンパイルすると、拡張子がlcとなったファイルが新たに作成されます。今回紹介するclickable-uri.lの場合には、バイトコンパイルを行うと、''clickable-uri.lc''というファイルが新たに作成されるはずです。xyzzyはlispファイルを読み込む際に同名の.lと.lcファイルがある場合には、コンパイルされた''.lc''を優先して読み込みます。今回のclickable-uri.lのように、xyzzyを起動するたびに毎回使用するようなlispファイルの場合には、バイトコンパイルして、lcファイルとしておいたほうが良いでしょう。((バイトコンパイル自体は必須ではありません。ただ読み込みが早くなるだけなので、必ずしもバイトコンパイルをする必要はありません。と言っても低速にファイルを読み込みたい場合はほとんどないと思うので、.lファイルはバイトコンパイルしておくと考えてOKだと思います。))

ちなみに、置き場所を決めるのところで用意したsiteinit.lも、分量が増えてくるとダンプファイルを作成し直す時に時間がかかるようになります。そんな時にはあらかじめバイトコンパイルしておくと、ダンプファイルを作成する時間が短くなるのでおすすめです。

***バイトコンパイルする [#s97af131]

では実際にバイトコンパイルをします。バイトコンパイルは、

 M-x byte-compile-file

の後、バイトコンパイルするファイルを指定すればOKです。clickable-uri.lを表示させた状態では、そのパスがミニバッファに最初から表示されるので、clickable-uri.lと入力すればバイトコンパイルされます。

#br
#br

CENTER:''clickable-uri.lをバイトコンパイルする''
CENTER:#ref(02.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){パスに注目。};

#br
#br

CENTER:''バイトコンパイル終了後''
CENTER:#ref(03.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){Enterを押して実行すると、ステータスバーに色々文字が表示され、最終的に「done.」と表示される。};

#br
#br

これでバイトコンパイルは終了です。

***.xyzzyやsiteinit.lに(require ...)の行を追加（NetInstaller経由でインストールしていない人のみ） [#p9baacab]

バイトコンパイルが終了したら、

  ;;      3. ~/.xyzzy または $XYZZY/site-lisp/siteinit.l に以下のコードを
  ;;         追加します。
  ;;
  ;;              (require "clickable-uri")


///// ここは要調査

を行います。ただしこの設定は、''アーカイブでインストールする人のみ''です。NetInstallerでインストールした人は記述する必要はありません。((NetInstallerで導入した場合に(require ... )の部分を記述しなくてよいのは、NetInstallerがその作業を自動で行ってくれるからです。ただし、NetInstallerで導入した場合に、.xyzzyやsiteinit.lに(require ...)の部分が記述されていても、特に問題はありません。あってもなくても動作に影響はないので、書いてもまぁいいわけです。ただし、NetInstallerインストールしたその拡張Lispをアンインストールしたときに、siteinit.lや.xyzzyに記述が残っていると、xyzzyを再び起動したときに「ファイルが見つかりません。」と表示されるので注意してください。)) NetInstallerでインストールしていない人は、clickable-uri.lを使用するために.xyzzyやsiteinit.lに以下のように記述します。

 (require "clickable-uri")

これを記述したら、（siteinit.lに書いた人はダンプファイルを作成しながら）xyzzyを再起動します。

***設定コードを追加 [#kbe2f58f]

4の、

  ;;      4. 必要ならばキーバインド設定のコードを追加します。
  ;;         （左クリックについては標準でキーバインドを変更します。）
  ;;
  ;;              例：
  ;;              (global-set-key #\C-l 'clickable-uri-recenter)
  ;;              (global-set-key '(#\C-c #\C-o) 'clickable-uri-open)

は、NetInstallerでインストールした人も記述しておきましょう。このコードは、clickable-uri.lを使用するときのキーバインドです。これはclickable-uri.lを使用する上で必須ではありませんが、記述しておくと便利になると思います。

***設定終了 [#j071b77c]

以上で導入は終了です。長々と説明しましたが、''NetInstallerで導入する場合には(require ...)の部分は省略できる（ただし記述してあっても特に問題ではない）''という点以外は、設定方法はアーカイブで導入する場合でもNetInstallerで導入する場合でも変わりません。どちらにしろキーバインドの変更などの設定を変更するときには、.xyzzyやsiteinit.lに記述をする点は覚えておいてください。

  ;;      5. 上記の設定を反映させるために、xyzzy を再起動します。
  ;;         siteinit.l に記述した場合は Ctrl キーと Shift キーを押しながら
  ;;         xyzzy を再起動し、ダンプファイルを再構築します。

の記載のとおりです。siteinit.lに記述した場合には、ダンプファイルを再構築してください。.xyzzyに記述した場合には、ダンプファイルを再構築しなくても良いです。

**clickable-uri.lを試してみる [#c2186ee5]

設定が終了したら、ためしにテキストファイル（拡張子が''txt''のファイル）を開いてみましょう。適当にメールアドレスなどのURIが書かれたファイルを表示させると、以下のようにその部分に色が付いた状態で表示されます。

#br
#br

CENTER:''インストールするとこんな感じ''
CENTER:#ref(04.png,center,50%)
CENTER:#img(,clear)
CENTER:&size(10){ちゃんと色付けされているでしょうか。ちなみにダブルクリックしてみるとWebブラウザやメールソフトを起動してくれます。};

#br
#br

一応まぁこの状態でも使えますが、色づけの色を変更したい人や、ダブルクリック以外のキーバインドにしたい人は続きを見てください。

**少しカスタマイズしてみる [#o526a95e]

せっかくなので少しカスタマイズしましょう。clickable-uri.lには、カスタマイズ用の変数が色々と定義されています。それを自分の好きなようにしておけば、簡単に色付けやキーバインドを変更させることができます。

clickable-uri.lには、簡単なカスタマイズ方法についての記載もあるので、その説明に沿って説明します。具体的な説明はSetting exampleにあります。

***色づけを変更する [#xe782f9d]

特に指定しない状態では、文字色は「文字4」となっているようです。表示される色を変更するには、.xyzzyやsiteinit.lに

 (setq *clickable-uri-keyword-color* '(:color 7 0 :underline))

のように記述します。:color 7 0 の''7''という部分が文字の色を指定するところです。文字1は1、文字2は2です。以下、4は4、5は5……15は15、となります。また、つぎの''0''は背景色となります。たとえば、

 (setq *clickable-uri-keyword-color* '(:color 1 12 :underline ))

とした場合には、

-文字色は1
-背景色は12

となります。:underlineはURIやメールアドレスに下線をつけるかどうかを指定するところです。ここを、たとえば、

 (setq *clickable-uri-keyword-color* '(:color 7 0 :underline :bold))

などとすれば、URIの部分が''Bold''（と下線付き）で表示されます。

***ダブルクリック以外でもURIを開く [#q4b16ca0]

ダブルクリック以外でURIを開きたい人は、以下を追加します。（これまでの説明どおりにしていれば、すでに導入済みです。）

 (global-set-key '(#\C-c #\C-o) 'clickable-uri-open)

です。(#\C-c #\C-o)という部分が実際のキーバインドになります。この場合は（わかると思うけど）C-c C-oです。

2ストロークキー以外の場合には、単純に該当部分を'(#\C-o)と書いても良いし、括弧をなくして、単純に#\C-oのように書いてもOKです。

***http://を開くWebブラウザを指定する [#eab93778]

httpスキームを開く時に使用するWebブラウザを指定することもできます。((特に指定しなければ、標準のWebブラウザです。))clickable-uri.lに記載されている

      (push '("^https?:" . "D:/utils/sleipnir/Sleipnir.exe")
            *clickable-uri-open-command-alist*)

がその部分です。たとえば、標準の設定ではInternet Explorerだけど、clickable-uri.lで開くときには、Firefoxで開きたいという場合は、siteinit.lや.xyzzyに以下のように記述します。

      (push '("^https?:" . "C:/Program Files/Mozilla Firefox/firefox.exe")
            *clickable-uri-open-command-alist*)

""で囲まれた部分にWebブラウザのパスを記述してください。

**さらにいろいろ [#rd436e7c]

以上を指定すればまぁ大体良いんじゃないか、と思うんですけど、もっとバシバシカスタマイズしたい人はまだまだあるんで :) 、してみると良いかもしれません。

***URIを開く時の色づけや書体を変更する [#n7248d27]

もできます。以下を追加します。

 (setq *clickable-uri-open-attribute* '(:foreground 4 :underline t :bold t))

です。

***強調表示される時間の変更 [#ie50662d]

もできるようです。なんかそこまでカスタマイズする人っているのか、とか思いますが……。
したい人は以下を追加します。

 (setq *clickable-uri-open-attribute-timeout* 0.2)

みたいな感じです。0.2の部分が秒数なので、0.5とかにすれば多少長めになります。強調表示させたくない場合には、nilにします。（nilにすると、ダブルクリック字の色づけとかのオプションは変更していても、（考えればわかるとおり）意味がなくなります。）

また、むやみに200とか異常な値を指定すると、悲しい事になるので注意してください。 :p ((C-gを押せば大丈夫です。))

**まぁこんな感じで [#c229261a]

よろしいと思うのですが。ほかにもいろいろと変更ができます。たとえば、何回クリックをしたときにURIを開くか、とか、開くバッファのサイズによってURIの色付けを行わなくしたり、などなどです。

もう少しLispがわかればいろいろ書けるのでしょうけど、自分はよく分からないのでこのくらいで終了です。

// 誰か書いて :(
